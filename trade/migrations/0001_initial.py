# Generated by Django 4.1.2 on 2022-11-07 00:49

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50)),
                ("content", models.TextField()),
                ("post_time", models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name="Commodity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("introduction", models.TextField(null=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "商品未生效"),
                            (1, "商品预售中"),
                            (2, "商品售卖中"),
                            (3, "商品已下架"),
                        ],
                        default=0,
                    ),
                ),
                ("total", models.IntegerField()),
                ("sale", models.IntegerField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=8)),
                ("discount", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "method",
                    models.IntegerField(
                        choices=[(0, "线上交易"), (1, "线下自取"), (2, "送货上门")]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filename", models.CharField(max_length=100)),
                ("oss_token", models.CharField(max_length=300)),
                (
                    "upload_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ImageDem",
            fields=[("id", models.AutoField(primary_key=True, serialize=False)),],
        ),
        migrations.CreateModel(
            name="Shop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30, unique=True)),
                ("reg_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("introduction", models.TextField(null=True)),
                (
                    "type",
                    models.IntegerField(
                        choices=[(0, "个人店铺"), (1, "合作店铺"), (2, "认证企业店铺")]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.CharField(max_length=12, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=10)),
                (
                    "depart",
                    models.IntegerField(
                        choices=[
                            (1, "材料科学与工程学院"),
                            (2, "电子信息工程学院"),
                            (3, "自动化科学与电器工程学院"),
                            (4, "能源与动力工程学院"),
                            (5, "航空科学与工程学院"),
                            (6, "计算机学院"),
                            (7, "机械工程及自动化学院"),
                            (8, "经济管理学院"),
                            (9, "数学科学学院"),
                            (10, "生物与医学工程学院"),
                            (11, "人文社会科学学院"),
                            (12, "外国语学院"),
                            (13, "交通科学与工程学院"),
                            (14, "可靠性与系统工程学院"),
                            (15, "宇航学院"),
                            (16, "飞行学院"),
                            (17, "仪器科学与光电学院"),
                            (18, "北京学院"),
                            (19, "物理学院"),
                            (20, "法学院"),
                            (21, "软件学院"),
                            (23, "高等理工学院"),
                            (24, "中法工程师学院"),
                            (25, "国际学院"),
                            (26, "新媒体艺术与设计学院"),
                            (27, "化学学院"),
                            (28, "马克思主义学院"),
                            (29, "人文与社会科学高等研究院"),
                            (30, "空间与环境学院"),
                            (31, "无人系统研究院"),
                            (32, "航空发动机学院"),
                            (35, "国际通用工程学院"),
                            (71, "传源书院"),
                            (73, "士谔书院"),
                            (74, "冯如书院"),
                            (75, "士嘉书院"),
                            (76, "守谔书院"),
                            (77, "致真书院"),
                            (79, "知行书院"),
                            (38, "医学科学与工程学院"),
                            (39, "网络空间安全学院"),
                            (41, "集成电路科学与工程学院"),
                            (42, "人工智能研究院"),
                            (43, "前沿科学技术创新研究院"),
                        ]
                    ),
                ),
                ("attendance_year", models.IntegerField()),
                ("gender", models.IntegerField(choices=[(0, "男"), (1, "女")])),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=20, unique=True)),
                ("password", models.CharField(max_length=128)),
                ("nickname", models.CharField(max_length=30)),
                ("reg_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("phone_no", models.CharField(max_length=11, null=True)),
                ("email", models.CharField(max_length=50)),
                ("signature", models.CharField(max_length=50, null=True)),
                (
                    "role",
                    models.IntegerField(choices=[(0, "管理员"), (1, "普通用户")], default=1),
                ),
                ("valid", models.BooleanField(default=True)),
                (
                    "image",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="trade.image",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="trade.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StuAuthReq",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("student_id", models.CharField(max_length=12)),
                ("student_name", models.CharField(max_length=10)),
                (
                    "depart",
                    models.IntegerField(
                        choices=[
                            (1, "材料科学与工程学院"),
                            (2, "电子信息工程学院"),
                            (3, "自动化科学与电器工程学院"),
                            (4, "能源与动力工程学院"),
                            (5, "航空科学与工程学院"),
                            (6, "计算机学院"),
                            (7, "机械工程及自动化学院"),
                            (8, "经济管理学院"),
                            (9, "数学科学学院"),
                            (10, "生物与医学工程学院"),
                            (11, "人文社会科学学院"),
                            (12, "外国语学院"),
                            (13, "交通科学与工程学院"),
                            (14, "可靠性与系统工程学院"),
                            (15, "宇航学院"),
                            (16, "飞行学院"),
                            (17, "仪器科学与光电学院"),
                            (18, "北京学院"),
                            (19, "物理学院"),
                            (20, "法学院"),
                            (21, "软件学院"),
                            (23, "高等理工学院"),
                            (24, "中法工程师学院"),
                            (25, "国际学院"),
                            (26, "新媒体艺术与设计学院"),
                            (27, "化学学院"),
                            (28, "马克思主义学院"),
                            (29, "人文与社会科学高等研究院"),
                            (30, "空间与环境学院"),
                            (31, "无人系统研究院"),
                            (32, "航空发动机学院"),
                            (35, "国际通用工程学院"),
                            (71, "传源书院"),
                            (73, "士谔书院"),
                            (74, "冯如书院"),
                            (75, "士嘉书院"),
                            (76, "守谔书院"),
                            (77, "致真书院"),
                            (79, "知行书院"),
                            (38, "医学科学与工程学院"),
                            (39, "网络空间安全学院"),
                            (41, "集成电路科学与工程学院"),
                            (42, "人工智能研究院"),
                            (43, "前沿科学技术创新研究院"),
                        ]
                    ),
                ),
                ("attendance_year", models.IntegerField()),
                ("gender", models.IntegerField(choices=[(0, "男"), (1, "女")])),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "等待审批"), (1, "认证通过"), (2, "认证失败")], default=0
                    ),
                ),
                ("req_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("comment", models.CharField(max_length=200, null=True)),
                ("deal_time", models.DateTimeField(null=True)),
                (
                    "admin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="admin_stu_reqs",
                        to="trade.user",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="student_stu_reqs",
                        to="trade.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ShopAuthReq",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "等待审批"), (1, "认证通过"), (2, "认证失败")], default=0
                    ),
                ),
                ("req_time", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "admin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="admin_shop_reqs",
                        to="trade.user",
                    ),
                ),
                (
                    "shop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="trade.shop"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="user_shop_reqs",
                        to="trade.user",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="shop",
            name="admin",
            field=models.ManyToManyField(related_name="admins_shop", to="trade.user"),
        ),
        migrations.AddField(
            model_name="shop",
            name="image",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="trade.image",
            ),
        ),
        migrations.AddField(
            model_name="shop",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="owner_shop",
                to="trade.user",
            ),
        ),
        migrations.CreateModel(
            name="Reply",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("floor", models.IntegerField()),
                ("content", models.TextField()),
                ("reply_time", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="trade.article"
                    ),
                ),
                (
                    "refer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="trade.reply",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="trade.user"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParaSet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "commodity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="trade.commodity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Parameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=50)),
                (
                    "add",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                (
                    "para_set",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="trade.paraset"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "已下单"),
                            (1, "已支付"),
                            (2, "已送达"),
                            (3, "已确认"),
                            (4, "已评价"),
                            (5, "已关闭"),
                        ],
                        default=0,
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=8)),
                ("num", models.IntegerField()),
                ("address", models.CharField(max_length=100, null=True)),
                ("start_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("pay_time", models.DateTimeField(null=True)),
                ("confirm_time", models.DateTimeField(null=True)),
                ("close_time", models.DateTimeField(null=True)),
                ("note", models.TextField(null=True)),
                (
                    "commodity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="trade.commodity",
                    ),
                ),
                ("select_paras", models.ManyToManyField(to="trade.parameter")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="trade.user"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50)),
                ("content", models.TextField()),
                (
                    "create_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("is_read", models.BooleanField(default=False)),
                (
                    "from_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="from_message_set",
                        to="trade.user",
                    ),
                ),
                (
                    "to_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="to_message_set",
                        to="trade.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Log",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("op_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("detail", models.CharField(max_length=100)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="trade.user"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="image",
            name="image_dem",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="trade.imagedem"
            ),
        ),
        migrations.AddField(
            model_name="commodity",
            name="image_dem",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="trade.imagedem",
            ),
        ),
        migrations.AddField(
            model_name="commodity",
            name="shop",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="trade.shop"
            ),
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "grade",
                    models.IntegerField(
                        choices=[
                            (1, "非常差"),
                            (2, "较差"),
                            (3, "中等"),
                            (4, "较好"),
                            (5, "非常好"),
                        ]
                    ),
                ),
                ("content", models.TextField(null=True)),
                (
                    "comment_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "image_dem",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="trade.imagedem",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="trade.order"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ArticleOp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("op", models.IntegerField(choices=[(0, "赞"), (1, "踩"), (2, "收藏")])),
                ("op_time", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="trade.article"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="trade.user"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="article",
            name="commodity",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="trade.commodity",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="trade.user"
            ),
        ),
    ]
